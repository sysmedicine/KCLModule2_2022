path_raw<-"/Users/xiangyuli/Downloads/KCLModule2_2021-main/Metagenomics_Statistics/UC_KCL_samplePatients_bb/"
setwd(path_raw)
load("phyloseq_object_read_2022.Rdata")
library(tidyr)
library(dplyr)
library(tibble)
library(phyloseq)
library(microbiome)
library(vegan)
path_raw<-"/Users/xiangyuli/Downloads/KCLModule2_2021-main/Metagenomics_Statistics/UC_KCL_samplePatients_bb/"
setwd(path_raw)
load("phyloseq_object_read_2022.Rdata")
OTUdata[1:5,1:5]
SampleData[1:5,]
TAXAData[1:5,]
? estimate_richness
Adiv <- estimate_richness(phylo_obj, measures=c("Observed","Chao1","ACE"))
Adiv
View(OTUdata)
which(OTUdata[,1]==0)
which(OTUdata[,1]<=1)
which(OTUdata[,1]==1)
which(OTUdata[,1]>=1&OTUdata[,1]<10)
which(OTUdata[,2]>=1&OTUdata[,2]<=10)
```{
SampleData[1:5,]
SampleData[1:5,]
SampleData[1:5,]
```{
SampleData[1:5,]
TAXAData[1:5,]
SampleData[1:5,]
TAXAData[1:5,]
TAXAData[1:5,]
Adiv <- estimate_richness(phylo_obj, measures=c("Observed","Chao1","ACE"))
Adiv
Adiv <- estimate_richness(phylo_obj, measures=c("Observed"))
Adiv
View(OTUdata)
View(OTUdata)
which(OTUdata[,1]!=1)
length(which(OTUdata[,1]!=1))
View(OTUdata)
length(which(OTUdata[,1]>=1))
length(which(OTUdata[,1]!=0))
length(which(OTUdata[,2]!=0))
Adiv_2<-estimate_richness(phylo_obj,measure=c("Observed","Chao 1","ACE"))
Adiv_2
View(Adiv_2)
adiv_3<-estimate_richness(phylo_obj,measures = c("Shannon","Simpson","InvSimpson"))
View(adiv_3)
1/(1-adiv_3$Simpson)
#path_raw<-"/Users/xiangyuli/Downloads/KCLModule2_2021-main/Metagenomics_Statistics/UC_KCL_samplePatients_bb/"
#setwd(path_raw)
load("phyloseq_object_read_2022.Rdata")
library(tidyr)
library(dplyr)
library(tibble)
library(phyloseq)
library(microbiome)
library(vegan)
path_raw<-"/Users/xiangyuli/Downloads/KCLModule2_2021-main/Metagenomics_Statistics/UC_KCL_samplePatients_bb/"
setwd(path_raw)
load("phyloseq_object_read_2022.Rdata")
OTUdata[1:5,1:5]
library(tidyr)
library(dplyr)
library(tibble)
library(phyloseq)
library(microbiome)
library(vegan)
path_raw<-"/Users/xiangyuli/Downloads/KCLModule2_2021-main/Metagenomics_Statistics/UC_KCL_samplePatients_bb/"
setwd(path_raw)
load("phyloseq_object_read_2022.Rdata")
library(tidyr)
library(dplyr)
library(tibble)
library(phyloseq)
library(microbiome)
library(vegan)
path_raw<-"/Users/xiangyuli/Downloads/KCLModule2_2021-main/Metagenomics_Statistics/UC_KCL_samplePatients_bb/"
setwd(path_raw)
load("phyloseq_object_read_2022.Rdata")
Adiv <- estimate_richness(phylo_obj, measures=c("Observed","Chao1","ACE","Shannon","Simpson","InvSimpson"))
Adiv <- estimate_richness(phylo_obj, measures=c("Observed","Chao1","ACE","Shannon","Simpson","InvSimpson"))
View(Adiv)
View(SampleData)
View(SampleData)
? shapiro.test
View(SampleData)
View(SampleData)
View(Adiv)
View(Adiv)
#Observed, Chao1, ACE, Shannon, Simpson, InvSimpson
#normal distribution test:Shapiro-Wilk test
result<-shapiro.test(Adiv$Shannon)
#Observed, Chao1, ACE, Shannon, Simpson, InvSimpson
#normal distribution test:Shapiro-Wilk test
shapiro.test(Adiv$Shannon)
#Observed, Chao1, ACE, Shannon, Simpson, InvSimpson
#normal distribution test:Shapiro-Wilk test
shapiro.test(Adiv$ACE)
#Observed, Chao1, ACE, Shannon, Simpson, InvSimpson
#normal distribution test:Shapiro-Wilk test
shapiro.test(Adiv$Observed)
View(SampleData)
##################################################################################
#Get the location of samples
index_1<-which(SampleData$Condition=="Disease")
View(Adiv)
Adiv$Shannon[index_1]
data_1<-Adiv$Shannon[index_1]
shapiro.test(data_1)
#Adiv <- estimate_richness(phylo_obj, measures=c("Observed","Chao1","ACE","Shannon","Simpson","InvSimpson"))
#Get the location of samples
index_2<-which(SampleData$Condition=="Control")
index_2
data_2<-Adiv$Shannon[index_2]
shapiro.test(data_2)
shapiro.test(Adiv$Shannon)
? t.test
t.test(data_1,data_2,paired = F)
? wilcox.test
wilcox.test(data_1,data_2,paired = F)
##################################################################################
#Get the location of samples
index_1<-which(SampleData$Condition=="Disease")
data_1<-Adiv$Simpson[index_1]
shapiro.test(data_1)
index_2<-which(SampleData$Condition=="Control")
data_2<-Adiv$Simpson[index_2]
shapiro.test(data_2)
wilcox.test(data_1,data_2,alternative="two.sided")
1. Please make normality test and differential test for Simpson test
mean(data_!)
mean(data_1)
mean(data_2)
cor.test(Adiv$Shannon,Adiv$Simpson)
? cor.test
cor.test(Adiv$Shannon,Adiv$Simpson,method = "spearman")
View(Adiv)
View(SampleData)
View(Adiv)
dim(Adiv)[2]
i=1
result_each<-cor.test(Adiv[,i],SampleData$BMI,method="Spearman")
result_each<-cor.test(Adiv[,i],SampleData$BMI,method="spearman")
p<-result_each$p.value
result_each
p<-result_each$p.value
r<-result_each$statistic
p
r
r<-result_each$estimate
r
#########################################
p_end<-NULL
r_end<-NULL
for (i in 1:dim(Adiv)[2]){
result_each<-cor.test(Adiv[,i],SampleData$BMI,method="spearman")
p<-result_each$p.value
r<-result_each$estimate
p_end<-rbind(p_end,p)
r_end<-rbind(r_end,r)
}
i
#########################################
Adiv<-Adiv[,-c("ACE","se.ACE")]
#########################################
Adiv<-Adiv[,-c(4,5)]
View(Adiv)
#########################################
Adiv<-Adiv[,-c(4,5)]
p_end<-NULL
r_end<-NULL
View(Adiv)
Adiv <- estimate_richness(phylo_obj, measures=c("Observed","Chao1","ACE","Shannon","Simpson","InvSimpson"))
#########################################
Adiv<-Adiv[,-c(4,5)]
p_end<-NULL
r_end<-NULL
for (i in 1:dim(Adiv)[2]){
result_each<-cor.test(Adiv[,i],SampleData$BMI,method="spearman")
p<-result_each$p.value
r<-result_each$estimate
p_end<-rbind(p_end,p)
r_end<-rbind(r_end,r)
}
re_matrix<-cbind(r_end,p_end)
rownames(re_matrix)=colnames(Adiv)
View(re_matrix)
p_end<-NULL
r_end<-NULL
for (i in 1:dim(Adiv)[2]){
result_each<-cor.test(Adiv[,i],SampleData$Age,method="spearman")
p<-result_each$p.value
r<-result_each$estimate
p_end<-rbind(p_end,p)
r_end<-rbind(r_end,r)
}
re_matrix<-cbind(r_end,p_end)
rownames(re_matrix)=colnames(Adiv)
View(Adiv)
View(SampleData)
? transform
? microbiome::transform
rm(list=ls())
load("phyloseq_object_relative_abundance_2022.Rdata")
getwd()
load("/Users/xiangyuli/Downloads/KCLModule2_2021-main/Metagenomics_Statistics/UC_KCL_samplePatients_bb/phyloseq_object_relative_abundance_2022.Rdata/phyloseq_object_relative_abundance_2022.Rdata")
path_raw<-"/Users/xiangyuli/Downloads/KCLModule2_2021-main/Metagenomics_Statistics/UC_KCL_samplePatients_bb/"
setwd(path_raw)
path_raw<-"/Users/xiangyuli/Downloads/KCLModule2_2021-main/Metagenomics_Statistics/UC_KCL_samplePatients_bb/"
setwd(path_raw)
load("phyloseq_object_relative_abundance_2022.Rdata")
path_raw<-"/Users/xiangyuli/Downloads/KCLModule2_2021-main/Metagenomics_Statistics/UC_KCL_samplePatients_bb/"
setwd(path_raw)
load("phyloseq_object_relative_abundance_2022.Rdata")
path_raw<-"/Users/xiangyuli/Downloads/KCLModule2_2021-main/Metagenomics_Statistics/UC_KCL_samplePatients_bb/"
setwd(path_raw)
load("phyloseq_object_relative_abundance_2022.Rdata")
path_raw<-"/Users/xiangyuli/Downloads/KCLModule2_2021-main/Metagenomics_Statistics/UC_KCL_samplePatients_bb/"
setwd(path_raw)
load("phyloseq_object_relative_abundance_2022.Rdata")
getwd()
load("phyloseq_object_relative_abundance_2022.Rdata")
#path_raw<-"/Users/xiangyuli/Downloads/KCLModule2_2021-main/Metagenomics_Statistics/UC_KCL_samplePatients_bb/"
#setwd(path_raw)
load("phyloseq_object_relative_abundance_2022.Rdata")
load("phyloseq_object_relative_abundance_2022.Rdata")
load("phyloseq_object_relative_abundance_2022.Rdata")
#beta diversity based on euclidean distance
Betdiv <-phyloseq::distance(phylo_obj, method="euclidean")
Betdiv
#beta diversity based on euclidean distance
Betdiv <-as.matrix(phyloseq::distance(phylo_obj, method="euclidean"))
View(Betdiv)
#######################
#log10 transformation for the abundance data
phylo_obj <- microbiome::transform(phylo_obj,transform="log10")
#beta diversity based on euclidean distance
Betdiv <-as.matrix(phyloseq::distance(phylo_obj, method="euclidean"))
View(Betdiv)
phyobj_wrkshp_shift <- microbiome::transform(phyobj_wrkshp, scale = 1,log10 = TRUE,)
phylo_obj <- microbiome::transform(phylo_obj, scale = 1,log10 = TRUE,)
#beta diversity based on euclidean distance
Betdiv <-as.matrix(phyloseq::distance(phylo_obj, method="euclidean"))
View(Betdiv)
？ distance
？phyloseq::distance
? phyloseq::distance
#beta diversity based on euclidean distance
Betdiv <-as.matrix(phyloseq::distance(phylo_obj, method="bray"))
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
View(Betdiv)
View(Betdiv)
View(Betdiv)
View(SampleData)
adonis(Betdiv ~ Condition, data=SampleData, permutations=999)
result<-adonis(Betdiv ~ Condition, data=SampleData, permutations=999)
result<-adonis2(Betdiv ~ Condition, data=SampleData, permutations=999)
View(result)
load("phyloseq_object_relative_abundance_2022.Rdata")
phylo_obj <- microbiome::transform(phylo_obj,transform="log10")
Betdiv <-as.matrix(phyloseq::distance(phylo_obj, method="bray"))
View(Betdiv)
? adonis2
View(Betdiv)
? adonis2
load("phyloseq_object_relative_abundance_2022.Rdata")
phylo_obj <- microbiome::transform(phylo_obj,transform="log10")
#beta diversity based on Bray  distance
Betdiv <-as.matrix(phyloseq::distance(phylo_obj, method="bray"))
result<-adonis2(Betdiv ~ Condition, data=SampleData, permutations=1000,method="bray")
result
getwd()
load("phyloseq_object_relative_abundance_2022.Rdata")
load("../phyloseq_object_relative_abundance_2022.Rdata")
load("../Metagenomics_Statistics/phyloseq_object_relative_abundance_2022.Rdata")
load("../Metagenomics_Statistics/UC_KCL_samplePatients_bb/phyloseq_object_relative_abundance_2022.Rdata")
path_raw<-"/Users/xiangyuli/Downloads/KCLModule2_2021-main/Metagenomics_Statistics/Metagenomics_Statistics_2022"
setwd(path_raw)
library(tidyr)
library(dplyr)
library(tibble)
library(phyloseq)
library(microbiome)
library(vegan)
load("phyloseq_object_read_2022.Rdata")
OTUdata[1:5,1:5]
SampleData[1:5,]
TAXAData[1:5,]
Adiv <- estimate_richness(phylo_obj, measures="Observed")
Adiv[1:5,]
? estimate_richness
Adiv_2<-estimate_richness(phylo_obj, measure=c("Chao1","ACE"))
Adiv_2[1:5,]
Adiv<-estimate_richness(phylo_obj, measure=c("Chao1","ACE"))
Adiv[1:5,]
Adiv<-estimate_richness(phylo_obj, measure=c("Observed","Chao1","ACE","Shannon","Simpson","InvSimpson"))
Adiv[1:5,]
#Get the location of samples
index_1<-which(SampleData$Condition=="Disease")
index_2<-which(SampleData$Condition=="Control")
#Extract the alpha diversity values
data_1<-Adiv$Shannon[index_1]
data_2<-Adiv$Shannon[index_2]
#Shapiro-Wilk test
shapiro.test(data_1)
shapiro.test(data_2)
t.test(data_1,data_2,paired = F)
#Get the location of samples
#index_1<-which(SampleData$Condition=="Disease")
#index_2<-which(SampleData$Condition=="Control")
#Extract the alpha diversity values
data_1<-Adiv$Simpson[index_1]
data_2<-Adiv$Simpson[index_2]
#Shapiro-Wilk test
shapiro.test(data_1)
shapiro.test(data_2)
#Get the location of samples
#index_1<-which(SampleData$Condition=="Disease")
#index_2<-which(SampleData$Condition=="Control")
#Extract the alpha diversity values
data_1<-Adiv$Simpson[index_1]
data_2<-Adiv$Simpson[index_2]
#Shapiro-Wilk test
shapiro.test(data_1)
shapiro.test(data_2)
#Get the location of samples
#index_1<-which(SampleData$Condition=="Disease")
#index_2<-which(SampleData$Condition=="Control")
#Extract the alpha diversity values
data_1<-Adiv$Simpson[index_1]
data_2<-Adiv$Simpson[index_2]
#Shapiro-Wilk test
shapiro.test(data_1)
shapiro.test(data_2)
```{r}
wilcox.test(data_1,data_2,paired = F)
mean(data_1)# disease
mean(data_2)#
cor.test(Adiv$Shannon,Adiv$Simpson,method="spearman")
View(Adiv)
Adiv<-Adiv[,-c(4,5)]
p_end<-NULL
r_end<-NULL
for (i in 1:dim(Adiv)[2]){
result_each<-cor.test(Adiv[,i],SampleData$Age,method="spearman")
p<-result_each$p.value
r<-result_each$estimate
p_end<-rbind(p_end,p)
r_end<-rbind(r_end,r)
}
result<-cbind(r_end,p_end)
rownames(result)=colnames(Adiv)
result
colnames(result)<-c("Coef","P value")
result
rm(list=ls())
load("phyloseq_object_relative_abundance_2022.Rdata")
View(OTUdata)
#log10 transformation for the abundance data
phylo_obj <- microbiome::transform(phylo_obj,transform="log10")
#beta diversity based on Bray  distance
Betdiv <-as.matrix(phyloseq::distance(phylo_obj, method="bray"))
Betdiv[1:5,1:5]
#log10 transformation for the abundance data
phylo_obj <- microbiome::transform(phylo_obj,transform="log10")
#beta diversity based on Bray  distance
Betdiv <-as.matrix(phyloseq::distance(phylo_obj, method="bray"))
Betdiv[1:5,]
result<-adonis2(Betdiv ~ Condition, data=SampleData, permutations=1000,method="bray")
result
? estimate_richness
